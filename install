#!/usr/bin/env bash
set -e

configs() {
    DTMP=$TMPDIR/github
    WTMP=%TMP%"\github"
    export DTMP WTMP
}

latest-version() {
    curl -fsi https://github.com/justinhartman/.github/releases/latest | awk -F/ 'tolower($1) ~ /^location:/ {print $(NF)}'
}

download() {
    echo "Making temporary directory and downloding the latest release from GitHub."
    case "$OS" in
        windows)
            md "${WTMP}"
            zip="${1%.tar.gz}.zip"
            curl -fsSLO "$zip"
            unzip "$(basename "$zip")" -d "${WTMP}"
            rm -f "$(basename "$zip")"
            echo "Downloaded and extracted all files to: ${WTMP}"
            ;;
        darwin)
            mkdir -p "${DTMP}"
            curl -fsSL "$1" | tar -xz -C "${DTMP}"
            echo "Downloaded and extracted all files to: ${DTMP}"
            ;;
        *)
            echo "ERROR: Could not find your Operating System."
            ;;
    esac
}

move() {
    cd "${DTMP}" || cd "${WTMP}" || exit
    # read -r -p "Type in the path of your project you want to install the templates: "
    cp -R _core/ "$(pwd)"/
    echo "Copied the core github files to $(pwd)"
}

license() {
    read -r -p "Which license should we use for your project?: "
    cp _licenses/"${REPLY}" "$(pwd)"/LICENSE
    echo "Copied the ${REPLY} license to $(pwd)/LICENSE"
}

configs

APP_VERSION="${1#v}"
if [ -z "$APP_VERSION" ]; then
    latest=$(latest-version) || true
    [ -n "$latest" ] || latest="1.0.0"
    cat << MSG >&2
Error: You must specify a version of .github templates via the first argument.
Example: curl -fsSL <script> | bash -s ${latest#v}
MSG
    exit 1
fi

OS="$(uname -s | tr '[:upper:]' '[:lower:]')"
case "$OS" in
    mingw* | msys*) OS=windows ;;
esac

download "https://github.com/justinhartman/.github/archive/$APP_VERSION.tar.gz"
move
license

echo -e "The .github templates have been installed at: $(pwd)"

exit 0
